
 POINTER
  cần phải suy nghĩ theo con trỏ
    con trỏ kiểu gì
    trỏ đi đâu
    con trỏ lưu trữ thông tin của 2 loại ô nhớ
        - ô nhớ của chính nó
        - ô nhớ mà nó đang trỏ vào
    máy tính lưu trữ bằng ô nhớ
    bản chất của việc này là kiểm soát sự tham chiếu đến các ô nhớ

    pointer explain

    int var = 9;
    int* p;
    cout<<"var mem cell: "<<&var <<endl;

    cout<<endl<<"before assign"<<endl;
    cout<<"mem cell that pointer is pointing :"<<p<<endl;
    cout<<"value of pointer :"<<*p<<endl;
    cout<<"mem cell of pointer itself :"<<&p<<endl;

    p=&var;

    cout<<endl<<"after assign"<<endl;
    cout<<"mem cell that pointer is pointing :"<<p<<endl;
    cout<<"value of pointer :"<<*p<<endl;
    cout<<"mem cell of pointer itself :"<<&p<<endl;

LINKED_LIST
    | data | pointer |
    linked list sẽ cần 1 con trỏ là header,
    header sẽ định nghĩa phần tử đầu tiên của list

    khi thêm 1 phần tử vào đầu linked list thì
    - phần tử mới trỏ đến head
    - copy head sang phần tử mới

        head -> null

        add node 1 :

        node_1->head->null
        head = node_1

        head->null
        node_1->null

        add node 2 :
        node_2->head( node_1 info)
        head = node_2

    xóa

    truyền tham số
        void print_list(Node* head_ref)
            truyền thẳng con trỏ mang giá trị node đầu để in
        void print_list_1(Node **head_ref)
            truyền con trỏ, đây chỉ là 1 bản copy nên 
            trong hàm sẽ cần 1 con trỏ khác copy giá trị node đầu
        void insert_last(Node *&head, int data)
            truyền dưới dạng địa chỉ mang toàn bộ thông tin

     